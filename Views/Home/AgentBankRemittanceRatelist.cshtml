@{

	// Layout
	Layout = "_Layout";

	// View
	ew_View = this;

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	AgentBankRemittanceRate_list.Page_Render();

	// Local variables (Temp data)
	bool emptywrk;
	string wrkonchange;
	List<OrderedDictionary> rswrk;
	List<OrderedDictionary> alwrk;
	bool selwrk;
	string[] arwrk;
	OrderedDictionary odwrk;
	string sSqlWrk;
	string sFilterWrk;
	string sWhereWrk;
}
@if (ew_Empty(AgentBankRemittanceRate.Export)) {
<script type="text/javascript">

// Form object
var CurrentPageID = EW_PAGE_ID = "list";
var CurrentForm = fAgentBankRemittanceRatelist = new ew_Form("fAgentBankRemittanceRatelist", "list");
fAgentBankRemittanceRatelist.FormKeyCountName = "@AgentBankRemittanceRate_list.FormKeyCountName";

// Validate form
fAgentBankRemittanceRatelist.Validate = function() {
	if (!this.ValidateRequired)
		return true; // Ignore validation
	var $ = jQuery, fobj = this.GetForm(), $fobj = $(fobj);
	if ($fobj.find("#a_confirm").val() == "F")
		return true;
	var elm, felm, uelm, addcnt = 0;
	var $k = $fobj.find("#" + this.FormKeyCountName); // Get key_count
	var rowcnt = ($k[0]) ? parseInt($k.val(), 10) : 1;
	var startcnt = (rowcnt == 0) ? 0 : 1; // Check rowcnt == 0 => Inline-Add
	var gridinsert = $fobj.find("#a_list").val() == "gridinsert";
	for (var i = startcnt; i <= rowcnt; i++) {
		var infix = ($k[0]) ? String(i) : "";
		$fobj.data("rowindex", infix);
		var checkrow = (gridinsert) ? !this.EmptyRow(infix) : true;
		if (checkrow) {
			addcnt++;
		elm = this.GetElements("x" + infix + "_CreatedDate");
		if (elm && !ew_IsHidden(elm) && !ew_HasValue(elm))
			return this.OnError(elm, "@Html.Raw(ew_JsEncode2(AgentBankRemittanceRate.CreatedDate.ReqErrMsg.Replace("%s", AgentBankRemittanceRate.CreatedDate.FldCaption)))");
		elm = this.GetElements("x" + infix + "_CreatedDate");
		if (elm && !ew_CheckDateDef(elm.value))
			return this.OnError(elm, "@Html.Raw(ew_JsEncode2(AgentBankRemittanceRate.CreatedDate.FldErrMsg))");
		elm = this.GetElements("x" + infix + "_CurrencyCode");
		if (elm && !ew_IsHidden(elm) && !ew_HasValue(elm))
			return this.OnError(elm, "@Html.Raw(ew_JsEncode2(AgentBankRemittanceRate.CurrencyCode.ReqErrMsg.Replace("%s", AgentBankRemittanceRate.CurrencyCode.FldCaption)))");
		elm = this.GetElements("x" + infix + "_AgentId");
		if (elm && !ew_IsHidden(elm) && !ew_HasValue(elm))
			return this.OnError(elm, "@Html.Raw(ew_JsEncode2(AgentBankRemittanceRate.AgentId.ReqErrMsg.Replace("%s", AgentBankRemittanceRate.AgentId.FldCaption)))");
		elm = this.GetElements("x" + infix + "_Rate");
		if (elm && !ew_IsHidden(elm) && !ew_HasValue(elm))
			return this.OnError(elm, "@Html.Raw(ew_JsEncode2(AgentBankRemittanceRate.Rate.ReqErrMsg.Replace("%s", AgentBankRemittanceRate.Rate.FldCaption)))");
		elm = this.GetElements("x" + infix + "_Rate");
		if (elm && !ew_CheckNumber(elm.value))
			return this.OnError(elm, "@Html.Raw(ew_JsEncode2(AgentBankRemittanceRate.Rate.FldErrMsg))");
		elm = this.GetElements("x" + infix + "_Amount");
		if (elm && !ew_IsHidden(elm) && !ew_HasValue(elm))
			return this.OnError(elm, "@Html.Raw(ew_JsEncode2(AgentBankRemittanceRate.Amount.ReqErrMsg.Replace("%s", AgentBankRemittanceRate.Amount.FldCaption)))");
		elm = this.GetElements("x" + infix + "_Amount");
		if (elm && !ew_CheckNumber(elm.value))
			return this.OnError(elm, "@Html.Raw(ew_JsEncode2(AgentBankRemittanceRate.Amount.FldErrMsg))");

		// Fire Form_CustomValidate event
		if (!this.Form_CustomValidate(fobj))
			return false;
		} // End Grid Add checking
	}
	if (gridinsert && addcnt == 0) { // No row added
		ew_Alert(ewLanguage.Phrase("NoAddRecord"));
		return false;
	}
	return true;
}

// Check empty row
fAgentBankRemittanceRatelist.EmptyRow = function(infix) {
	var fobj = this.Form;
	if (ew_ValueChanged(fobj, infix, "ContractType", false)) return false;
	if (ew_ValueChanged(fobj, infix, "CreatedDate", false)) return false;
	if (ew_ValueChanged(fobj, infix, "CurrencyCode", false)) return false;
	if (ew_ValueChanged(fobj, infix, "AgentId", false)) return false;
	if (ew_ValueChanged(fobj, infix, "Rate", false)) return false;
	if (ew_ValueChanged(fobj, infix, "Amount", false)) return false;
	if (ew_ValueChanged(fobj, infix, "Balance", false)) return false;
	if (ew_ValueChanged(fobj, infix, "CreatedBy", false)) return false;
	return true;
}

// Form_CustomValidate event
fAgentBankRemittanceRatelist.Form_CustomValidate = 
 function(fobj) { // DO NOT CHANGE THIS LINE!

 	// Your custom validation code here, return false if invalid.
 	return true;
 }

// Use JavaScript validation or not remove PROJ.ProgramLanguage
fAgentBankRemittanceRatelist.ValidateRequired = @((EW_CLIENT_VALIDATE) ? "true" : "false");

// Dynamic selection lists
fAgentBankRemittanceRatelist.Lists["x_ContractType"] = {"LinkField":"","Ajax":null,"AutoFill":false,"DisplayFields":["","","",""],"ParentFields":[],"ChildFields":[],"FilterFields":[],"Options":[],"Template":""};
fAgentBankRemittanceRatelist.Lists["x_ContractType"].Options = @Html.Raw(ew_ArrayToJson(AgentBankRemittanceRate.ContractType.Options()));
fAgentBankRemittanceRatelist.Lists["x_CurrencyCode"] = {"LinkField":"x_CurrCode","Ajax":true,"AutoFill":true,"DisplayFields":["x_CurrCode","","",""],"ParentFields":[],"ChildFields":["x_AgentId"],"FilterFields":[],"Options":[],"Template":"","LinkTable":"vw_AgentFCBal"};
fAgentBankRemittanceRatelist.Lists["x_AgentId"] = {"LinkField":"x_AgentId","Ajax":true,"AutoFill":true,"DisplayFields":["x_AgentId","x_AgentName","x_Balance",""],"ParentFields":["x_CurrencyCode"],"ChildFields":[],"FilterFields":["x_CurrCode"],"Options":[],"Template":"","LinkTable":"vw_AgentFCBal"};

// Form object for search
var CurrentSearchForm = fAgentBankRemittanceRatelistsrch = new ew_Form("fAgentBankRemittanceRatelistsrch");

// Validate function for search
fAgentBankRemittanceRatelistsrch.Validate = function(fobj) {
	if (!this.ValidateRequired)
		return true; // Ignore validation
	fobj = fobj || this.Form;
	var infix = "";
	elm = this.GetElements("x" + infix + "_CreatedDate");
	if (elm && !ew_CheckDateDef(elm.value))
		return this.OnError(elm, "@Html.Raw(ew_JsEncode2(AgentBankRemittanceRate.CreatedDate.FldErrMsg))");

	// Fire Form_CustomValidate event
	if (!this.Form_CustomValidate(fobj))
		return false;
	return true;
}

// Form_CustomValidate event
fAgentBankRemittanceRatelistsrch.Form_CustomValidate = 
 function(fobj) { // DO NOT CHANGE THIS LINE!

 	// Your custom validation code here, return false if invalid.
 	return true;
 }

// Use JavaScript validation or not remove PROJ.ProgramLanguage
fAgentBankRemittanceRatelistsrch.ValidateRequired = @((EW_CLIENT_VALIDATE) ? "true" : "false");

// Dynamic selection lists
fAgentBankRemittanceRatelistsrch.Lists["x_ContractType"] = {"LinkField":"","Ajax":null,"AutoFill":false,"DisplayFields":["","","",""],"ParentFields":[],"ChildFields":[],"FilterFields":[],"Options":[],"Template":""};
fAgentBankRemittanceRatelistsrch.Lists["x_ContractType"].Options = @Html.Raw(ew_ArrayToJson(AgentBankRemittanceRate.ContractType.Options()));
fAgentBankRemittanceRatelistsrch.Lists["x_CurrencyCode"] = {"LinkField":"x_CurrCode","Ajax":true,"AutoFill":false,"DisplayFields":["x_CurrCode","","",""],"ParentFields":[],"ChildFields":["x_AgentId"],"FilterFields":[],"Options":[],"Template":"","LinkTable":"vw_AgentFCBal"};
fAgentBankRemittanceRatelistsrch.Lists["x_AgentId"] = {"LinkField":"x_AgentId","Ajax":true,"AutoFill":false,"DisplayFields":["x_AgentId","x_AgentName","x_Balance",""],"ParentFields":["x_CurrencyCode"],"ChildFields":[],"FilterFields":["x_CurrCode"],"Options":[],"Template":"","LinkTable":"vw_AgentFCBal"};

// Init search panel as collapsed
if (fAgentBankRemittanceRatelistsrch) fAgentBankRemittanceRatelistsrch.InitSearchPanel = true;
</script>
<script type="text/javascript">

// Write your client script here, no need to add script tags.
</script>
}
@if (ew_Empty(AgentBankRemittanceRate.Export)) {
<div class="ewToolbar">
@if (ew_Empty(AgentBankRemittanceRate.Export)) {
<div style="display: inline-block">
	@{ Breadcrumb?.Render(); }
</div>
}
@if (AgentBankRemittanceRate_list.TotalRecs > 0 && AgentBankRemittanceRate_list.ExportOptions.Visible) {
	AgentBankRemittanceRate_list.ExportOptions.Render("body");
}
@if (AgentBankRemittanceRate_list.SearchOptions.Visible) {
	AgentBankRemittanceRate_list.SearchOptions.Render("body");
}
@if (AgentBankRemittanceRate_list.FilterOptions.Visible) {
	AgentBankRemittanceRate_list.FilterOptions.Render("body");
}
@if (ew_Empty(AgentBankRemittanceRate.Export)) {
	@Language.SelectionForm()
}
<div class="clearfix"></div>
</div>
}
@{
	if (AgentBankRemittanceRate_list.CurrentAction == "gridadd") {
		AgentBankRemittanceRate_list.CurrentFilter = "0=1";
		AgentBankRemittanceRate_list.StartRec = 1;
		AgentBankRemittanceRate_list.DisplayRecs = AgentBankRemittanceRate_list.GridAddRowCount;
		AgentBankRemittanceRate_list.TotalRecs = AgentBankRemittanceRate_list.DisplayRecs;
		AgentBankRemittanceRate_list.StopRec = AgentBankRemittanceRate_list.DisplayRecs;
	} else {
		if (AgentBankRemittanceRate_list.TotalRecs <= 0) {
			AgentBankRemittanceRate_list.TotalRecs = AgentBankRemittanceRate_list.SelectRecordCount();
		}
		AgentBankRemittanceRate_list.StartRec = 1;
		if (AgentBankRemittanceRate_list.DisplayRecs <= 0 || ew_NotEmpty(AgentBankRemittanceRate_list.Export) && AgentBankRemittanceRate_list.ExportAll) { // Display all records
			AgentBankRemittanceRate_list.DisplayRecs = AgentBankRemittanceRate_list.TotalRecs;
		}
		if (!(ew_NotEmpty(AgentBankRemittanceRate_list.Export) && AgentBankRemittanceRate_list.ExportAll)) {
			AgentBankRemittanceRate_list.SetUpStartRec(); // Set up start record position
		}
		AgentBankRemittanceRate_list.Recordset = AgentBankRemittanceRate_list.LoadRecordset(AgentBankRemittanceRate_list.StartRec - 1, AgentBankRemittanceRate_list.DisplayRecs);

		// Set no record found message
		if (AgentBankRemittanceRate_list.CurrentAction == "" && AgentBankRemittanceRate_list.TotalRecs == 0) {
			if (AgentBankRemittanceRate_list.SearchWhere == "0=101") {
				AgentBankRemittanceRate_list.WarningMessage = Language.Phrase("EnterSearchCriteria");
			} else {
				AgentBankRemittanceRate_list.WarningMessage = Language.Phrase("NoRecord");
			}
		}
	}
	AgentBankRemittanceRate_list.RenderOtherOptions();
}
@{
if (ew_Empty(AgentBankRemittanceRate_list.Export) && ew_Empty(AgentBankRemittanceRate_list.CurrentAction)) { // Begin search form
<form name="fAgentBankRemittanceRatelistsrch" id="fAgentBankRemittanceRatelistsrch" class="form-inline ewForm" action="@ew_AppPath(ew_CurrentPage())">
<div id="fAgentBankRemittanceRatelistsrch_SearchPanel" class="ewSearchPanel collapse@(ew_NotEmpty(AgentBankRemittanceRate_list.SearchWhere) ? " in" : "")">
<input type="hidden" name="cmd" value="search">
<div class="ewBasicSearch">
@{
	if (ew_Empty(gsSearchError)) {
		AgentBankRemittanceRate_list.LoadAdvancedSearch(); // Load advanced search
	}

	// Render for search
	AgentBankRemittanceRate_list.RowType = EW_ROWTYPE_SEARCH;

	// Render row
	AgentBankRemittanceRate_list.ResetAttrs();
	AgentBankRemittanceRate_list.RenderRow();
}
<div id="xsr_1" class="ewRow">
@if (AgentBankRemittanceRate.ContractType.Visible) { // ContractType.Visible (begin)
	<div id="xsc_ContractType" class="ewCell form-group">
		<label class="ewSearchCaption ewLabel">@Html.Raw(AgentBankRemittanceRate.ContractType.FldCaption)</label>
		<span class="ewSearchOperator">@Html.Raw(Language.Phrase("LIKE"))<input type="hidden" name="z_ContractType" id="z_ContractType" value="LIKE"></span>
		<span class="ewSearchField">
<div id="tp_x_ContractType" class="ewTemplate"><input type="radio" data-table="AgentBankRemittanceRate" data-field="x_ContractType" data-value-separator="@AgentBankRemittanceRate.ContractType.DisplayValueSeparatorAttribute" name="x_ContractType" id="x_ContractType" value="{value}"@Html.Raw(AgentBankRemittanceRate.ContractType.EditAttributes)></div>
<div id="dsl_x_ContractType" data-repeatcolumn="5" class="ewItemList" style="display: none;"><div>
@AgentBankRemittanceRate.ContractType.RadioButtonListHtml(false, "x_ContractType")
</div></div>
</span>
	</div>
} @* ContractType.Visible (end) *@
</div>
<div id="xsr_2" class="ewRow">
@if (AgentBankRemittanceRate.CreatedDate.Visible) { // CreatedDate.Visible (begin)
	<div id="xsc_CreatedDate" class="ewCell form-group">
		<label for="x_CreatedDate" class="ewSearchCaption ewLabel">@Html.Raw(AgentBankRemittanceRate.CreatedDate.FldCaption)</label>
		<span class="ewSearchOperator">@Html.Raw(Language.Phrase("="))<input type="hidden" name="z_CreatedDate" id="z_CreatedDate" value="="></span>
		<span class="ewSearchField">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_CreatedDate" name="x_CreatedDate" id="x_CreatedDate" placeholder="@AgentBankRemittanceRate.CreatedDate.PlaceHolder" value="@AgentBankRemittanceRate.CreatedDate.EditValue" @Html.Raw(AgentBankRemittanceRate.CreatedDate.EditAttributes)>
@if (!AgentBankRemittanceRate.CreatedDate.ReadOnly && !AgentBankRemittanceRate.CreatedDate.Disabled && !AgentBankRemittanceRate.CreatedDate.EditAttrs.ContainsKey("readonly") && !AgentBankRemittanceRate.CreatedDate.EditAttrs.ContainsKey("disabled")) {
<script type="text/javascript">
ew_CreateCalendar("fAgentBankRemittanceRatelistsrch", "x_CreatedDate", 0);
</script>
}
</span>
	</div>
} @* CreatedDate.Visible (end) *@
</div>
<div id="xsr_3" class="ewRow">
@if (AgentBankRemittanceRate.CurrencyCode.Visible) { // CurrencyCode.Visible (begin)
	<div id="xsc_CurrencyCode" class="ewCell form-group">
		<label for="x_CurrencyCode" class="ewSearchCaption ewLabel">@Html.Raw(AgentBankRemittanceRate.CurrencyCode.FldCaption)</label>
		<span class="ewSearchOperator">@Html.Raw(Language.Phrase("LIKE"))<input type="hidden" name="z_CurrencyCode" id="z_CurrencyCode" value="LIKE"></span>
		<span class="ewSearchField">
<span>@{ AgentBankRemittanceRate.CurrencyCode.EditAttrs.Prepend("onchange", "ew_UpdateOpt.call(this);"); }</span>
<select data-table="AgentBankRemittanceRate" data-field="x_CurrencyCode" data-value-separator="@AgentBankRemittanceRate.CurrencyCode.DisplayValueSeparatorAttribute"  id="x_CurrencyCode" name="x_CurrencyCode" @Html.Raw(AgentBankRemittanceRate.CurrencyCode.EditAttributes)>
@AgentBankRemittanceRate.CurrencyCode.SelectOptionListHtml("x_CurrencyCode")
</select>
<input type="hidden" name="s_x_CurrencyCode" id="s_x_CurrencyCode" value="@AgentBankRemittanceRate.CurrencyCode.LookupFilterQuery(false, "extbs")">
</span>
	</div>
} @* CurrencyCode.Visible (end) *@
</div>
<div id="xsr_4" class="ewRow">
@if (AgentBankRemittanceRate.AgentId.Visible) { // AgentId.Visible (begin)
	<div id="xsc_AgentId" class="ewCell form-group">
		<label for="x_AgentId" class="ewSearchCaption ewLabel">@Html.Raw(AgentBankRemittanceRate.AgentId.FldCaption)</label>
		<span class="ewSearchOperator">@Html.Raw(Language.Phrase("LIKE"))<input type="hidden" name="z_AgentId" id="z_AgentId" value="LIKE"></span>
		<span class="ewSearchField">
<div class="ewDropdownList has-feedback">
	<span onclick="" class="form-control dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
		@Html.Raw(AgentBankRemittanceRate.AgentId.AdvancedSearch.ViewValue)
	</span>
	<span class="glyphicon glyphicon-remove form-control-feedback ewDropdownListClear"></span>
	<span class="form-control-feedback"><span class="caret"></span></span>
	<div id="dsl_x_AgentId" data-repeatcolumn="1" class="dropdown-menu">
		<div class="ewItems" style="position: relative; overflow-x: hidden;">
@AgentBankRemittanceRate.AgentId.RadioButtonListHtml(true, "x_AgentId")
		</div>
	</div>
	<div id="tp_x_AgentId" class="ewTemplate"><input type="radio" data-table="AgentBankRemittanceRate" data-field="x_AgentId" data-value-separator="@AgentBankRemittanceRate.AgentId.DisplayValueSeparatorAttribute" name="x_AgentId" id="x_AgentId" value="{value}"@Html.Raw(AgentBankRemittanceRate.AgentId.EditAttributes)></div>
</div>
<input type="hidden" name="s_x_AgentId" id="s_x_AgentId" value="@AgentBankRemittanceRate.AgentId.LookupFilterQuery(false, "extbs")">
</span>
	</div>
} @* AgentId.Visible (end) *@
</div>
<div id="xsr_5" class="ewRow">
	<button class="btn btn-primary ewButton" name="btnsubmit" id="btnsubmit" type="submit">@Html.Raw(Language.Phrase("QuickSearchBtn"))</button>
</div>
</div>
</div>
</form>
} @* End search form *@
}
@AgentBankRemittanceRate_list.ShowPageHeader()
@{ AgentBankRemittanceRate_list.ShowMessage(); }
@if (AgentBankRemittanceRate_list.TotalRecs > 0 || AgentBankRemittanceRate_list.CurrentAction != "") {
<div class="panel panel-default ewGrid AgentBankRemittanceRate">
@if (ew_Empty(AgentBankRemittanceRate.Export)) {
<div class="panel-heading ewGridUpperPanel">
@if (AgentBankRemittanceRate_list.CurrentAction != "gridadd" && AgentBankRemittanceRate_list.CurrentAction != "gridedit") {
<form name="ewPagerForm" class="form-inline ewForm ewPagerForm" action="@ew_AppPath(ew_CurrentPage())">
@{ AgentBankRemittanceRate_list.Pager = AgentBankRemittanceRate_list.Pager ?? new cNumericPager(AgentBankRemittanceRate_list.StartRec, AgentBankRemittanceRate_list.DisplayRecs, AgentBankRemittanceRate_list.TotalRecs, AgentBankRemittanceRate_list.RecRange, AgentBankRemittanceRate_list.AutoHidePager); }
@if (AgentBankRemittanceRate_list.Pager.RecordCount > 0 && AgentBankRemittanceRate_list.Pager.Visible) {
<div class="ewPager">
<div class="ewNumericPage"><ul class="pagination">
	@if (AgentBankRemittanceRate_list.Pager.FirstButton.Enabled) {
	<li><a href="@ew_AppPath(AgentBankRemittanceRate_list.PageUrl)start=@AgentBankRemittanceRate_list.Pager.FirstButton.Start">@Html.Raw(Language.Phrase("PagerFirst"))</a></li>
	}
	@if (AgentBankRemittanceRate_list.Pager.PrevButton.Enabled) {
	<li><a href="@ew_AppPath(AgentBankRemittanceRate_list.PageUrl)start=@AgentBankRemittanceRate_list.Pager.PrevButton.Start">@Html.Raw(Language.Phrase("PagerPrevious"))</a></li>
	}
	@foreach (var PagerItem in AgentBankRemittanceRate_list.Pager.Items) {
		<li class="@((!PagerItem.Enabled) ? "active" : null)"><a href="@((PagerItem.Enabled) ? (ew_AppPath(AgentBankRemittanceRate_list.PageUrl) + "start=" + Convert.ToString(PagerItem.Start)) : "#")">@PagerItem.Text</a></li>
	}
	@if (AgentBankRemittanceRate_list.Pager.NextButton.Enabled) {
	<li><a href="@ew_AppPath(AgentBankRemittanceRate_list.PageUrl)start=@AgentBankRemittanceRate_list.Pager.NextButton.Start">@Html.Raw(Language.Phrase("PagerNext"))</a></li>
	}
	@if (AgentBankRemittanceRate_list.Pager.LastButton.Enabled) {
	<li><a href="@ew_AppPath(AgentBankRemittanceRate_list.PageUrl)start=@AgentBankRemittanceRate_list.Pager.LastButton.Start">@Html.Raw(Language.Phrase("PagerLast"))</a></li>
	}
</ul></div>
</div>
	<div class="ewPager ewRec">
		<span>@Html.Raw(Language.Phrase("Record"))&nbsp;@(AgentBankRemittanceRate_list.Pager.FromIndex)&nbsp;@Html.Raw(Language.Phrase("To"))&nbsp;@(AgentBankRemittanceRate_list.Pager.ToIndex)&nbsp;@Html.Raw(Language.Phrase("Of"))&nbsp;@(AgentBankRemittanceRate_list.Pager.RecordCount)</span>
	</div>
}
@if (AgentBankRemittanceRate_list.Pager.RecordCount > 0 && (!AgentBankRemittanceRate_list.AutoHidePageSizeSelector || AgentBankRemittanceRate_list.Pager.Visible)) {
<div class="ewPager">
<select name="@EW_TABLE_REC_PER_PAGE" class="form-control input-sm ewTooltip" title="@Html.Raw(Language.Phrase("RecordsPerPage"))" onchange="this.form.submit();">
<option value="10" selected="@(AgentBankRemittanceRate_list.DisplayRecs == 10)">10</option>
<option value="20" selected="@(AgentBankRemittanceRate_list.DisplayRecs == 20)">20</option>
<option value="50" selected="@(AgentBankRemittanceRate_list.DisplayRecs == 50)">50</option>
<option value="ALL" selected="@(AgentBankRemittanceRate_list.RecordsPerPage == -1)">@Html.Raw(Language.Phrase("AllRecords"))</option>
</select>
</div>
}
</form>
}
	<div class="ewListOtherOptions">
	@{ AgentBankRemittanceRate_list.ForEachOtherOption(kvp => kvp.Value.Render("body")); }
	</div>
	<div class="clearfix"></div>
</div>
}
<form name="fAgentBankRemittanceRatelist" id="fAgentBankRemittanceRatelist" class="form-inline ewForm ewListForm" action="@ew_AppPath(ew_CurrentPage())" method="post">
@if (AgentBankRemittanceRate_list.CheckToken) {
<input type="hidden" name="@EW_TOKEN_NAME" value="@AgentBankRemittanceRate_list.Token">
}
<div id="gmp_AgentBankRemittanceRate" class="@((ew_IsResponsiveLayout()) ? "table-responsive ewGridMiddlePanel" : "ewGridMiddlePanel")">
@if (AgentBankRemittanceRate_list.TotalRecs > 0) { // Begin If TotalRecs > 0
<table id="tbl_AgentBankRemittanceRatelist" class="table ewTable">
@Html.Raw(AgentBankRemittanceRate_list.TableCustomInnerHtml)
<thead><!-- Table header -->
	<tr class="ewTableHeader">
@{

	// Header row
	AgentBankRemittanceRate_list.RowType = EW_ROWTYPE_HEADER;

	// Render list options
	AgentBankRemittanceRate_list.RenderListOptions();

	// Render list options (header, left)
	AgentBankRemittanceRate_list.ListOptions.Render("header", "left");
}
@if (AgentBankRemittanceRate.id.Visible) { // id.Visible (begin)
	if (AgentBankRemittanceRate_list.SortUrl(AgentBankRemittanceRate.id) == "") {
		<th data-name="id"><div id="elh_AgentBankRemittanceRate_id" class="AgentBankRemittanceRate_id"><div class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.id.FldCaption)</div></div></th>
	} else {
		<th data-name="id"><div class="ewPointer" onclick="ew_Sort(event,'@Html.Raw(AgentBankRemittanceRate.SortUrl(AgentBankRemittanceRate.id))',1);"><div id="elh_AgentBankRemittanceRate_id" class="AgentBankRemittanceRate_id">
			<div class="ewTableHeaderBtn"><span class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.id.FldCaption)</span><span class="ewTableHeaderSort">@if (AgentBankRemittanceRate.id.Sort == "ASC") {<span class="caret ewSortUp"></span>} else if (AgentBankRemittanceRate.id.Sort == "DESC") {<span class="caret"></span>}</span></div>
        </div></div></th>
	}
} @* id.Visible (end) *@
@if (AgentBankRemittanceRate.ContractType.Visible) { // ContractType.Visible (begin)
	if (AgentBankRemittanceRate_list.SortUrl(AgentBankRemittanceRate.ContractType) == "") {
		<th data-name="ContractType"><div id="elh_AgentBankRemittanceRate_ContractType" class="AgentBankRemittanceRate_ContractType"><div class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.ContractType.FldCaption)</div></div></th>
	} else {
		<th data-name="ContractType"><div class="ewPointer" onclick="ew_Sort(event,'@Html.Raw(AgentBankRemittanceRate.SortUrl(AgentBankRemittanceRate.ContractType))',1);"><div id="elh_AgentBankRemittanceRate_ContractType" class="AgentBankRemittanceRate_ContractType">
			<div class="ewTableHeaderBtn"><span class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.ContractType.FldCaption)</span><span class="ewTableHeaderSort">@if (AgentBankRemittanceRate.ContractType.Sort == "ASC") {<span class="caret ewSortUp"></span>} else if (AgentBankRemittanceRate.ContractType.Sort == "DESC") {<span class="caret"></span>}</span></div>
        </div></div></th>
	}
} @* ContractType.Visible (end) *@
@if (AgentBankRemittanceRate.CreatedDate.Visible) { // CreatedDate.Visible (begin)
	if (AgentBankRemittanceRate_list.SortUrl(AgentBankRemittanceRate.CreatedDate) == "") {
		<th data-name="CreatedDate"><div id="elh_AgentBankRemittanceRate_CreatedDate" class="AgentBankRemittanceRate_CreatedDate"><div class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.CreatedDate.FldCaption)</div></div></th>
	} else {
		<th data-name="CreatedDate"><div class="ewPointer" onclick="ew_Sort(event,'@Html.Raw(AgentBankRemittanceRate.SortUrl(AgentBankRemittanceRate.CreatedDate))',1);"><div id="elh_AgentBankRemittanceRate_CreatedDate" class="AgentBankRemittanceRate_CreatedDate">
			<div class="ewTableHeaderBtn"><span class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.CreatedDate.FldCaption)</span><span class="ewTableHeaderSort">@if (AgentBankRemittanceRate.CreatedDate.Sort == "ASC") {<span class="caret ewSortUp"></span>} else if (AgentBankRemittanceRate.CreatedDate.Sort == "DESC") {<span class="caret"></span>}</span></div>
        </div></div></th>
	}
} @* CreatedDate.Visible (end) *@
@if (AgentBankRemittanceRate.CurrencyCode.Visible) { // CurrencyCode.Visible (begin)
	if (AgentBankRemittanceRate_list.SortUrl(AgentBankRemittanceRate.CurrencyCode) == "") {
		<th data-name="CurrencyCode"><div id="elh_AgentBankRemittanceRate_CurrencyCode" class="AgentBankRemittanceRate_CurrencyCode"><div class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.CurrencyCode.FldCaption)</div></div></th>
	} else {
		<th data-name="CurrencyCode"><div class="ewPointer" onclick="ew_Sort(event,'@Html.Raw(AgentBankRemittanceRate.SortUrl(AgentBankRemittanceRate.CurrencyCode))',1);"><div id="elh_AgentBankRemittanceRate_CurrencyCode" class="AgentBankRemittanceRate_CurrencyCode">
			<div class="ewTableHeaderBtn"><span class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.CurrencyCode.FldCaption)</span><span class="ewTableHeaderSort">@if (AgentBankRemittanceRate.CurrencyCode.Sort == "ASC") {<span class="caret ewSortUp"></span>} else if (AgentBankRemittanceRate.CurrencyCode.Sort == "DESC") {<span class="caret"></span>}</span></div>
        </div></div></th>
	}
} @* CurrencyCode.Visible (end) *@
@if (AgentBankRemittanceRate.AgentId.Visible) { // AgentId.Visible (begin)
	if (AgentBankRemittanceRate_list.SortUrl(AgentBankRemittanceRate.AgentId) == "") {
		<th data-name="AgentId"><div id="elh_AgentBankRemittanceRate_AgentId" class="AgentBankRemittanceRate_AgentId"><div class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.AgentId.FldCaption)</div></div></th>
	} else {
		<th data-name="AgentId"><div class="ewPointer" onclick="ew_Sort(event,'@Html.Raw(AgentBankRemittanceRate.SortUrl(AgentBankRemittanceRate.AgentId))',1);"><div id="elh_AgentBankRemittanceRate_AgentId" class="AgentBankRemittanceRate_AgentId">
			<div class="ewTableHeaderBtn"><span class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.AgentId.FldCaption)</span><span class="ewTableHeaderSort">@if (AgentBankRemittanceRate.AgentId.Sort == "ASC") {<span class="caret ewSortUp"></span>} else if (AgentBankRemittanceRate.AgentId.Sort == "DESC") {<span class="caret"></span>}</span></div>
        </div></div></th>
	}
} @* AgentId.Visible (end) *@
@if (AgentBankRemittanceRate.Rate.Visible) { // Rate.Visible (begin)
	if (AgentBankRemittanceRate_list.SortUrl(AgentBankRemittanceRate.Rate) == "") {
		<th data-name="Rate"><div id="elh_AgentBankRemittanceRate_Rate" class="AgentBankRemittanceRate_Rate"><div class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.Rate.FldCaption)</div></div></th>
	} else {
		<th data-name="Rate"><div class="ewPointer" onclick="ew_Sort(event,'@Html.Raw(AgentBankRemittanceRate.SortUrl(AgentBankRemittanceRate.Rate))',1);"><div id="elh_AgentBankRemittanceRate_Rate" class="AgentBankRemittanceRate_Rate">
			<div class="ewTableHeaderBtn"><span class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.Rate.FldCaption)</span><span class="ewTableHeaderSort">@if (AgentBankRemittanceRate.Rate.Sort == "ASC") {<span class="caret ewSortUp"></span>} else if (AgentBankRemittanceRate.Rate.Sort == "DESC") {<span class="caret"></span>}</span></div>
        </div></div></th>
	}
} @* Rate.Visible (end) *@
@if (AgentBankRemittanceRate.Amount.Visible) { // Amount.Visible (begin)
	if (AgentBankRemittanceRate_list.SortUrl(AgentBankRemittanceRate.Amount) == "") {
		<th data-name="Amount"><div id="elh_AgentBankRemittanceRate_Amount" class="AgentBankRemittanceRate_Amount"><div class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.Amount.FldCaption)</div></div></th>
	} else {
		<th data-name="Amount"><div class="ewPointer" onclick="ew_Sort(event,'@Html.Raw(AgentBankRemittanceRate.SortUrl(AgentBankRemittanceRate.Amount))',1);"><div id="elh_AgentBankRemittanceRate_Amount" class="AgentBankRemittanceRate_Amount">
			<div class="ewTableHeaderBtn"><span class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.Amount.FldCaption)</span><span class="ewTableHeaderSort">@if (AgentBankRemittanceRate.Amount.Sort == "ASC") {<span class="caret ewSortUp"></span>} else if (AgentBankRemittanceRate.Amount.Sort == "DESC") {<span class="caret"></span>}</span></div>
        </div></div></th>
	}
} @* Amount.Visible (end) *@
@if (AgentBankRemittanceRate.Balance.Visible) { // Balance.Visible (begin)
	if (AgentBankRemittanceRate_list.SortUrl(AgentBankRemittanceRate.Balance) == "") {
		<th data-name="Balance"><div id="elh_AgentBankRemittanceRate_Balance" class="AgentBankRemittanceRate_Balance"><div class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.Balance.FldCaption)</div></div></th>
	} else {
		<th data-name="Balance"><div class="ewPointer" onclick="ew_Sort(event,'@Html.Raw(AgentBankRemittanceRate.SortUrl(AgentBankRemittanceRate.Balance))',1);"><div id="elh_AgentBankRemittanceRate_Balance" class="AgentBankRemittanceRate_Balance">
			<div class="ewTableHeaderBtn"><span class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.Balance.FldCaption)</span><span class="ewTableHeaderSort">@if (AgentBankRemittanceRate.Balance.Sort == "ASC") {<span class="caret ewSortUp"></span>} else if (AgentBankRemittanceRate.Balance.Sort == "DESC") {<span class="caret"></span>}</span></div>
        </div></div></th>
	}
} @* Balance.Visible (end) *@
@if (AgentBankRemittanceRate.CreatedBy.Visible) { // CreatedBy.Visible (begin)
	if (AgentBankRemittanceRate_list.SortUrl(AgentBankRemittanceRate.CreatedBy) == "") {
		<th data-name="CreatedBy"><div id="elh_AgentBankRemittanceRate_CreatedBy" class="AgentBankRemittanceRate_CreatedBy"><div class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.CreatedBy.FldCaption)</div></div></th>
	} else {
		<th data-name="CreatedBy"><div class="ewPointer" onclick="ew_Sort(event,'@Html.Raw(AgentBankRemittanceRate.SortUrl(AgentBankRemittanceRate.CreatedBy))',1);"><div id="elh_AgentBankRemittanceRate_CreatedBy" class="AgentBankRemittanceRate_CreatedBy">
			<div class="ewTableHeaderBtn"><span class="ewTableHeaderCaption">@Html.Raw(AgentBankRemittanceRate.CreatedBy.FldCaption)</span><span class="ewTableHeaderSort">@if (AgentBankRemittanceRate.CreatedBy.Sort == "ASC") {<span class="caret ewSortUp"></span>} else if (AgentBankRemittanceRate.CreatedBy.Sort == "DESC") {<span class="caret"></span>}</span></div>
        </div></div></th>
	}
} @* CreatedBy.Visible (end) *@
@{

	// Render list options (header, right)
	AgentBankRemittanceRate_list.ListOptions.Render("header", "right");
}
	</tr>
</thead>
<tbody>
@{ // Begin Code
if (AgentBankRemittanceRate_list.ExportAll && ew_NotEmpty(AgentBankRemittanceRate_list.Export)) {
	AgentBankRemittanceRate_list.StopRec = AgentBankRemittanceRate_list.TotalRecs;
} else {

	// Set the last record to display
	if (AgentBankRemittanceRate_list.TotalRecs > AgentBankRemittanceRate_list.StartRec + AgentBankRemittanceRate_list.DisplayRecs - 1) {
		AgentBankRemittanceRate_list.StopRec = AgentBankRemittanceRate_list.StartRec + AgentBankRemittanceRate_list.DisplayRecs - 1;
	} else {
		AgentBankRemittanceRate_list.StopRec = AgentBankRemittanceRate_list.TotalRecs;
	}
}

// Restore number of post back records
if (ObjForm != null) {
	ObjForm.Index = -1;
	if (ObjForm.HasValue(AgentBankRemittanceRate_list.FormKeyCountName) && (AgentBankRemittanceRate_list.CurrentAction == "gridadd" || AgentBankRemittanceRate_list.CurrentAction == "gridedit" || AgentBankRemittanceRate_list.CurrentAction == "F")) {
		AgentBankRemittanceRate_list.KeyCount = ew_ConvertToInt(ObjForm.GetValue(AgentBankRemittanceRate_list.FormKeyCountName));
		AgentBankRemittanceRate_list.StopRec = AgentBankRemittanceRate_list.StartRec + AgentBankRemittanceRate_list.KeyCount - 1;
	}
}
if (AgentBankRemittanceRate_list.Recordset != null && AgentBankRemittanceRate_list.Recordset.HasRows) {
	if (!AgentBankRemittanceRate_list.Connection.SelectOffset) { // DN
		for (var i = 1; i <= AgentBankRemittanceRate_list.StartRec - 1; i++) { // Move to first record
			if (AgentBankRemittanceRate_list.Recordset.Read()) {
				AgentBankRemittanceRate_list.RecCnt++;
			}
		}
	} else {
		AgentBankRemittanceRate_list.RecCnt = AgentBankRemittanceRate_list.StartRec - 1;
	}
} else if (!AgentBankRemittanceRate_list.AllowAddDeleteRow && AgentBankRemittanceRate_list.StopRec == 0) {
	AgentBankRemittanceRate_list.StopRec = AgentBankRemittanceRate_list.GridAddRowCount;
}

// Initialize aggregate
AgentBankRemittanceRate_list.RowType = EW_ROWTYPE_AGGREGATEINIT;
AgentBankRemittanceRate_list.ResetAttrs();
AgentBankRemittanceRate_list.RenderRow();
if (AgentBankRemittanceRate_list.CurrentAction == "gridadd") {
	AgentBankRemittanceRate_list.RowIndex = 0;
}
if (AgentBankRemittanceRate_list.CurrentAction == "gridedit") {
	AgentBankRemittanceRate_list.RowIndex = 0;
}

// Output data rows
bool Eof = (AgentBankRemittanceRate_list.Recordset == null); // DN
while (AgentBankRemittanceRate_list.RecCnt < AgentBankRemittanceRate_list.StopRec) { // Begin While
	if (AgentBankRemittanceRate_list.CurrentAction != "gridadd" && !Eof) { // DN
		Eof = !AgentBankRemittanceRate_list.Recordset.Read();
	}
	AgentBankRemittanceRate_list.RecCnt++;
	if (AgentBankRemittanceRate_list.RecCnt >= AgentBankRemittanceRate_list.StartRec) {
		AgentBankRemittanceRate_list.RowCnt++;
		if (AgentBankRemittanceRate_list.CurrentAction == "gridadd" || AgentBankRemittanceRate_list.CurrentAction == "gridedit" || AgentBankRemittanceRate_list.CurrentAction == "F") {
			AgentBankRemittanceRate_list.RowIndex = ew_ConvertToInt(AgentBankRemittanceRate_list.RowIndex) + 1;
			ObjForm.Index = ew_ConvertToInt(AgentBankRemittanceRate_list.RowIndex);
			if (ObjForm.HasValue(AgentBankRemittanceRate_list.FormActionName)) {
				AgentBankRemittanceRate_list.RowAction = ObjForm.GetValue(AgentBankRemittanceRate_list.FormActionName);
			} else if (AgentBankRemittanceRate_list.CurrentAction == "gridadd") {
				AgentBankRemittanceRate_list.RowAction = "insert";
			} else {
				AgentBankRemittanceRate_list.RowAction = "";
			}
		}

		// Set up key count
		AgentBankRemittanceRate_list.KeyCount = ew_ConvertToInt(AgentBankRemittanceRate_list.RowIndex);

		// Init row class and style
		AgentBankRemittanceRate_list.ResetAttrs();
		AgentBankRemittanceRate_list.CssClass = "";
		if (AgentBankRemittanceRate_list.CurrentAction == "gridadd") {
			AgentBankRemittanceRate_list.LoadDefaultValues(); // Load default values
		} else {
			AgentBankRemittanceRate_list.LoadRowValues(AgentBankRemittanceRate_list.Recordset); // Load row values
		}
		AgentBankRemittanceRate_list.RowType = EW_ROWTYPE_VIEW; // Render view
		if (AgentBankRemittanceRate_list.CurrentAction == "gridadd") { // Grid add
			AgentBankRemittanceRate_list.RowType = EW_ROWTYPE_ADD; // Render add
		}
		if (AgentBankRemittanceRate_list.CurrentAction == "gridadd" && AgentBankRemittanceRate_list.EventCancelled && !ObjForm.HasValue("k_blankrow")) { // Insert failed
			AgentBankRemittanceRate_list.RestoreCurrentRowFormValues(AgentBankRemittanceRate_list.RowIndex); // Restore form values
		}
		if (AgentBankRemittanceRate_list.CurrentAction == "gridedit") { // Grid edit
			if (AgentBankRemittanceRate_list.EventCancelled) {
				AgentBankRemittanceRate_list.RestoreCurrentRowFormValues(AgentBankRemittanceRate_list.RowIndex); // Restore form values
			}
			if (AgentBankRemittanceRate_list.RowAction == "insert") {
				AgentBankRemittanceRate_list.RowType = EW_ROWTYPE_ADD; // Render add
			} else {
				AgentBankRemittanceRate_list.RowType = EW_ROWTYPE_EDIT; // Render edit
			}
		}
		if (AgentBankRemittanceRate_list.CurrentAction == "gridedit" && (AgentBankRemittanceRate_list.RowType == EW_ROWTYPE_EDIT || AgentBankRemittanceRate_list.RowType == EW_ROWTYPE_ADD) && AgentBankRemittanceRate_list.EventCancelled) { // Update failed
			AgentBankRemittanceRate_list.RestoreCurrentRowFormValues(AgentBankRemittanceRate_list.RowIndex); // Restore form values
		}
		if (AgentBankRemittanceRate_list.RowType == EW_ROWTYPE_EDIT) { // Edit row
			AgentBankRemittanceRate_list.EditRowCnt++;
		}

		// Set up row id / data-rowindex
		AgentBankRemittanceRate_list.RowAttrs.Add("data-rowindex", Convert.ToString(AgentBankRemittanceRate_list.RowCnt));
		AgentBankRemittanceRate_list.RowAttrs.Add("id", "r" + Convert.ToString(AgentBankRemittanceRate_list.RowCnt) + "_AgentBankRemittanceRate");
		AgentBankRemittanceRate_list.RowAttrs.Add("data-rowtype", Convert.ToString(AgentBankRemittanceRate_list.RowType));

		// Render row
		AgentBankRemittanceRate_list.RenderRow();

		// Render list options
		AgentBankRemittanceRate_list.RenderListOptions();

		// Skip delete row / empty row for confirm page
		if (AgentBankRemittanceRate_list.RowAction != "delete" && AgentBankRemittanceRate_list.RowAction != "insertdelete" && !(AgentBankRemittanceRate_list.RowAction == "insert" && AgentBankRemittanceRate_list.CurrentAction == "F" && AgentBankRemittanceRate_list.EmptyRow())) {
	<tr @Html.Raw(AgentBankRemittanceRate_list.RowAttributes)>
	@{

		// Render list options (body, left)
		AgentBankRemittanceRate_list.ListOptions.Render("body", "left", AgentBankRemittanceRate_list.RowCnt);
	}
	@if (AgentBankRemittanceRate.id.Visible) { // id.Visible (begin)
		<td data-name="id"@Html.Raw(AgentBankRemittanceRate.id.CellAttributes)>
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_ADD) { // Add (begin)
			 @* id (begin) *@
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_id" name="o@(AgentBankRemittanceRate_list.RowIndex)_id" id="o@(AgentBankRemittanceRate_list.RowIndex)_id" value="@AgentBankRemittanceRate.id.OldValue">
			 @* id (end) *@
		} @* Add (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_EDIT) { // Edit (begin)
			 @* id (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_id" class="form-group AgentBankRemittanceRate_id">
<span @Html.Raw(AgentBankRemittanceRate.id.ViewAttributes)>
<p class="form-control-static">@Html.Raw(AgentBankRemittanceRate.id.EditValue)</p></span>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_id" name="x@(AgentBankRemittanceRate_list.RowIndex)_id" id="x@(AgentBankRemittanceRate_list.RowIndex)_id" value="@AgentBankRemittanceRate.id.CurrentValue">
			 @* id (end) *@
		} @* Edit (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_VIEW) { // View (begin)
			 @* id (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_id" class="AgentBankRemittanceRate_id">
<span @Html.Raw(AgentBankRemittanceRate.id.ViewAttributes)>
@Html.Raw(AgentBankRemittanceRate.id.ListViewValue)</span>
</span>
			 @* id (end) *@
		} @* View (end) *@
<a id="@(AgentBankRemittanceRate_list.PageObjName + "_row_" + Convert.ToString(AgentBankRemittanceRate_list.RowCnt))"></a></td>
	} @* id.Visible (end) *@
	@if (AgentBankRemittanceRate.ContractType.Visible) { // ContractType.Visible (begin)
		<td data-name="ContractType"@Html.Raw(AgentBankRemittanceRate.ContractType.CellAttributes)>
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_ADD) { // Add (begin)
			 @* ContractType (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_ContractType" class="form-group AgentBankRemittanceRate_ContractType">
<div id="tp_x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" class="ewTemplate"><input type="radio" data-table="AgentBankRemittanceRate" data-field="x_ContractType" data-value-separator="@AgentBankRemittanceRate.ContractType.DisplayValueSeparatorAttribute" name="x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" id="x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" value="{value}"@Html.Raw(AgentBankRemittanceRate.ContractType.EditAttributes)></div>
<div id="dsl_x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" data-repeatcolumn="5" class="ewItemList" style="display: none;"><div>
@AgentBankRemittanceRate.ContractType.RadioButtonListHtml(false, "x" + AgentBankRemittanceRate_list.RowIndex + "_ContractType")
</div></div>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_ContractType" name="o@(AgentBankRemittanceRate_list.RowIndex)_ContractType" id="o@(AgentBankRemittanceRate_list.RowIndex)_ContractType" value="@AgentBankRemittanceRate.ContractType.OldValue">
			 @* ContractType (end) *@
		} @* Add (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_EDIT) { // Edit (begin)
			 @* ContractType (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_ContractType" class="form-group AgentBankRemittanceRate_ContractType">
<div id="tp_x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" class="ewTemplate"><input type="radio" data-table="AgentBankRemittanceRate" data-field="x_ContractType" data-value-separator="@AgentBankRemittanceRate.ContractType.DisplayValueSeparatorAttribute" name="x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" id="x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" value="{value}"@Html.Raw(AgentBankRemittanceRate.ContractType.EditAttributes)></div>
<div id="dsl_x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" data-repeatcolumn="5" class="ewItemList" style="display: none;"><div>
@AgentBankRemittanceRate.ContractType.RadioButtonListHtml(false, "x" + AgentBankRemittanceRate_list.RowIndex + "_ContractType")
</div></div>
</span>
			 @* ContractType (end) *@
		} @* Edit (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_VIEW) { // View (begin)
			 @* ContractType (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_ContractType" class="AgentBankRemittanceRate_ContractType">
<span @Html.Raw(AgentBankRemittanceRate.ContractType.ViewAttributes)>
@Html.Raw(AgentBankRemittanceRate.ContractType.ListViewValue)</span>
</span>
			 @* ContractType (end) *@
		} @* View (end) *@
</td>
	} @* ContractType.Visible (end) *@
	@if (AgentBankRemittanceRate.CreatedDate.Visible) { // CreatedDate.Visible (begin)
		<td data-name="CreatedDate"@Html.Raw(AgentBankRemittanceRate.CreatedDate.CellAttributes)>
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_ADD) { // Add (begin)
			 @* CreatedDate (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_CreatedDate" class="form-group AgentBankRemittanceRate_CreatedDate">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_CreatedDate" name="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" id="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" placeholder="@AgentBankRemittanceRate.CreatedDate.PlaceHolder" value="@AgentBankRemittanceRate.CreatedDate.EditValue" @Html.Raw(AgentBankRemittanceRate.CreatedDate.EditAttributes)>
@if (!AgentBankRemittanceRate.CreatedDate.ReadOnly && !AgentBankRemittanceRate.CreatedDate.Disabled && !AgentBankRemittanceRate.CreatedDate.EditAttrs.ContainsKey("readonly") && !AgentBankRemittanceRate.CreatedDate.EditAttrs.ContainsKey("disabled")) {
<script type="text/javascript">
ew_CreateCalendar("fAgentBankRemittanceRatelist", "x@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate", 0);
</script>
}
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_CreatedDate" name="o@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" id="o@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" value="@AgentBankRemittanceRate.CreatedDate.OldValue">
			 @* CreatedDate (end) *@
		} @* Add (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_EDIT) { // Edit (begin)
			 @* CreatedDate (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_CreatedDate" class="form-group AgentBankRemittanceRate_CreatedDate">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_CreatedDate" name="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" id="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" placeholder="@AgentBankRemittanceRate.CreatedDate.PlaceHolder" value="@AgentBankRemittanceRate.CreatedDate.EditValue" @Html.Raw(AgentBankRemittanceRate.CreatedDate.EditAttributes)>
@if (!AgentBankRemittanceRate.CreatedDate.ReadOnly && !AgentBankRemittanceRate.CreatedDate.Disabled && !AgentBankRemittanceRate.CreatedDate.EditAttrs.ContainsKey("readonly") && !AgentBankRemittanceRate.CreatedDate.EditAttrs.ContainsKey("disabled")) {
<script type="text/javascript">
ew_CreateCalendar("fAgentBankRemittanceRatelist", "x@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate", 0);
</script>
}
</span>
			 @* CreatedDate (end) *@
		} @* Edit (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_VIEW) { // View (begin)
			 @* CreatedDate (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_CreatedDate" class="AgentBankRemittanceRate_CreatedDate">
<span @Html.Raw(AgentBankRemittanceRate.CreatedDate.ViewAttributes)>
@Html.Raw(AgentBankRemittanceRate.CreatedDate.ListViewValue)</span>
</span>
			 @* CreatedDate (end) *@
		} @* View (end) *@
</td>
	} @* CreatedDate.Visible (end) *@
	@if (AgentBankRemittanceRate.CurrencyCode.Visible) { // CurrencyCode.Visible (begin)
		<td data-name="CurrencyCode"@Html.Raw(AgentBankRemittanceRate.CurrencyCode.CellAttributes)>
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_ADD) { // Add (begin)
			 @* CurrencyCode (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_CurrencyCode" class="form-group AgentBankRemittanceRate_CurrencyCode">
<span>@{ AgentBankRemittanceRate.CurrencyCode.EditAttrs.Prepend("onchange", "ew_UpdateOpt.call(this);"); }</span>
<select data-table="AgentBankRemittanceRate" data-field="x_CurrencyCode" data-value-separator="@AgentBankRemittanceRate.CurrencyCode.DisplayValueSeparatorAttribute"  id="x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" name="x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" @Html.Raw(AgentBankRemittanceRate.CurrencyCode.EditAttributes)>
@AgentBankRemittanceRate.CurrencyCode.SelectOptionListHtml("x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode")
</select>
<input type="hidden" name="s_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" id="s_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" value="@AgentBankRemittanceRate.CurrencyCode.LookupFilterQuery()">
<input type="hidden" name="ln_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" id="ln_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" value="x@(AgentBankRemittanceRate_list.RowIndex)_AgentId">
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_CurrencyCode" name="o@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" id="o@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" value="@AgentBankRemittanceRate.CurrencyCode.OldValue">
			 @* CurrencyCode (end) *@
		} @* Add (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_EDIT) { // Edit (begin)
			 @* CurrencyCode (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_CurrencyCode" class="form-group AgentBankRemittanceRate_CurrencyCode">
<span>@{ AgentBankRemittanceRate.CurrencyCode.EditAttrs.Prepend("onchange", "ew_UpdateOpt.call(this);"); }</span>
<select data-table="AgentBankRemittanceRate" data-field="x_CurrencyCode" data-value-separator="@AgentBankRemittanceRate.CurrencyCode.DisplayValueSeparatorAttribute"  id="x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" name="x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" @Html.Raw(AgentBankRemittanceRate.CurrencyCode.EditAttributes)>
@AgentBankRemittanceRate.CurrencyCode.SelectOptionListHtml("x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode")
</select>
<input type="hidden" name="s_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" id="s_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" value="@AgentBankRemittanceRate.CurrencyCode.LookupFilterQuery()">
<input type="hidden" name="ln_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" id="ln_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" value="x@(AgentBankRemittanceRate_list.RowIndex)_AgentId">
</span>
			 @* CurrencyCode (end) *@
		} @* Edit (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_VIEW) { // View (begin)
			 @* CurrencyCode (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_CurrencyCode" class="AgentBankRemittanceRate_CurrencyCode">
<span @Html.Raw(AgentBankRemittanceRate.CurrencyCode.ViewAttributes)>
@Html.Raw(AgentBankRemittanceRate.CurrencyCode.ListViewValue)</span>
</span>
			 @* CurrencyCode (end) *@
		} @* View (end) *@
</td>
	} @* CurrencyCode.Visible (end) *@
	@if (AgentBankRemittanceRate.AgentId.Visible) { // AgentId.Visible (begin)
		<td data-name="AgentId"@Html.Raw(AgentBankRemittanceRate.AgentId.CellAttributes)>
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_ADD) { // Add (begin)
			 @* AgentId (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_AgentId" class="form-group AgentBankRemittanceRate_AgentId">
<span>@{ AgentBankRemittanceRate.AgentId.EditAttrs.Prepend("onclick", "ew_AutoFill(this);"); }</span>
<div class="ewDropdownList has-feedback">
	<span onclick="" class="form-control dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
		@Html.Raw(AgentBankRemittanceRate.AgentId.ViewValue)
	</span>
	<span class="glyphicon glyphicon-remove form-control-feedback ewDropdownListClear"></span>
	<span class="form-control-feedback"><span class="caret"></span></span>
	<div id="dsl_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" data-repeatcolumn="1" class="dropdown-menu">
		<div class="ewItems" style="position: relative; overflow-x: hidden;">
@AgentBankRemittanceRate.AgentId.RadioButtonListHtml(true, "x" + AgentBankRemittanceRate_list.RowIndex + "_AgentId")
		</div>
	</div>
	<div id="tp_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" class="ewTemplate"><input type="radio" data-table="AgentBankRemittanceRate" data-field="x_AgentId" data-value-separator="@AgentBankRemittanceRate.AgentId.DisplayValueSeparatorAttribute" name="x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="{value}"@Html.Raw(AgentBankRemittanceRate.AgentId.EditAttributes)></div>
</div>
<input type="hidden" name="s_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="s_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="@AgentBankRemittanceRate.AgentId.LookupFilterQuery()">
<input type="hidden" name="ln_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="ln_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="x@(AgentBankRemittanceRate_list.RowIndex)_Balance">
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_AgentId" name="o@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="o@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="@AgentBankRemittanceRate.AgentId.OldValue">
			 @* AgentId (end) *@
		} @* Add (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_EDIT) { // Edit (begin)
			 @* AgentId (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_AgentId" class="form-group AgentBankRemittanceRate_AgentId">
<div class="ewDropdownList has-feedback">
	<span onclick="" class="form-control dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
		@Html.Raw(AgentBankRemittanceRate.AgentId.ViewValue)
	</span>
	<span class="glyphicon glyphicon-remove form-control-feedback ewDropdownListClear"></span>
	<span class="form-control-feedback"><span class="caret"></span></span>
	<div id="dsl_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" data-repeatcolumn="1" class="dropdown-menu">
		<div class="ewItems" style="position: relative; overflow-x: hidden;">
@AgentBankRemittanceRate.AgentId.RadioButtonListHtml(true, "x" + AgentBankRemittanceRate_list.RowIndex + "_AgentId")
		</div>
	</div>
	<div id="tp_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" class="ewTemplate"><input type="radio" data-table="AgentBankRemittanceRate" data-field="x_AgentId" data-value-separator="@AgentBankRemittanceRate.AgentId.DisplayValueSeparatorAttribute" name="x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="{value}"@Html.Raw(AgentBankRemittanceRate.AgentId.EditAttributes)></div>
</div>
<input type="hidden" name="s_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="s_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="@AgentBankRemittanceRate.AgentId.LookupFilterQuery()">
</span>
			 @* AgentId (end) *@
		} @* Edit (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_VIEW) { // View (begin)
			 @* AgentId (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_AgentId" class="AgentBankRemittanceRate_AgentId">
<span @Html.Raw(AgentBankRemittanceRate.AgentId.ViewAttributes)>
@Html.Raw(AgentBankRemittanceRate.AgentId.ListViewValue)</span>
</span>
			 @* AgentId (end) *@
		} @* View (end) *@
</td>
	} @* AgentId.Visible (end) *@
	@if (AgentBankRemittanceRate.Rate.Visible) { // Rate.Visible (begin)
		<td data-name="Rate"@Html.Raw(AgentBankRemittanceRate.Rate.CellAttributes)>
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_ADD) { // Add (begin)
			 @* Rate (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_Rate" class="form-group AgentBankRemittanceRate_Rate">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_Rate" name="x@(AgentBankRemittanceRate_list.RowIndex)_Rate" id="x@(AgentBankRemittanceRate_list.RowIndex)_Rate" size="30" placeholder="@AgentBankRemittanceRate.Rate.PlaceHolder" value="@AgentBankRemittanceRate.Rate.EditValue" @Html.Raw(AgentBankRemittanceRate.Rate.EditAttributes)>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_Rate" name="o@(AgentBankRemittanceRate_list.RowIndex)_Rate" id="o@(AgentBankRemittanceRate_list.RowIndex)_Rate" value="@AgentBankRemittanceRate.Rate.OldValue">
			 @* Rate (end) *@
		} @* Add (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_EDIT) { // Edit (begin)
			 @* Rate (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_Rate" class="form-group AgentBankRemittanceRate_Rate">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_Rate" name="x@(AgentBankRemittanceRate_list.RowIndex)_Rate" id="x@(AgentBankRemittanceRate_list.RowIndex)_Rate" size="30" placeholder="@AgentBankRemittanceRate.Rate.PlaceHolder" value="@AgentBankRemittanceRate.Rate.EditValue" @Html.Raw(AgentBankRemittanceRate.Rate.EditAttributes)>
</span>
			 @* Rate (end) *@
		} @* Edit (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_VIEW) { // View (begin)
			 @* Rate (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_Rate" class="AgentBankRemittanceRate_Rate">
<span @Html.Raw(AgentBankRemittanceRate.Rate.ViewAttributes)>
@Html.Raw(AgentBankRemittanceRate.Rate.ListViewValue)</span>
</span>
			 @* Rate (end) *@
		} @* View (end) *@
</td>
	} @* Rate.Visible (end) *@
	@if (AgentBankRemittanceRate.Amount.Visible) { // Amount.Visible (begin)
		<td data-name="Amount"@Html.Raw(AgentBankRemittanceRate.Amount.CellAttributes)>
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_ADD) { // Add (begin)
			 @* Amount (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_Amount" class="form-group AgentBankRemittanceRate_Amount">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_Amount" name="x@(AgentBankRemittanceRate_list.RowIndex)_Amount" id="x@(AgentBankRemittanceRate_list.RowIndex)_Amount" size="30" placeholder="@AgentBankRemittanceRate.Amount.PlaceHolder" value="@AgentBankRemittanceRate.Amount.EditValue" @Html.Raw(AgentBankRemittanceRate.Amount.EditAttributes)>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_Amount" name="o@(AgentBankRemittanceRate_list.RowIndex)_Amount" id="o@(AgentBankRemittanceRate_list.RowIndex)_Amount" value="@AgentBankRemittanceRate.Amount.OldValue">
			 @* Amount (end) *@
		} @* Add (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_EDIT) { // Edit (begin)
			 @* Amount (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_Amount" class="form-group AgentBankRemittanceRate_Amount">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_Amount" name="x@(AgentBankRemittanceRate_list.RowIndex)_Amount" id="x@(AgentBankRemittanceRate_list.RowIndex)_Amount" size="30" placeholder="@AgentBankRemittanceRate.Amount.PlaceHolder" value="@AgentBankRemittanceRate.Amount.EditValue" @Html.Raw(AgentBankRemittanceRate.Amount.EditAttributes)>
</span>
			 @* Amount (end) *@
		} @* Edit (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_VIEW) { // View (begin)
			 @* Amount (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_Amount" class="AgentBankRemittanceRate_Amount">
<span @Html.Raw(AgentBankRemittanceRate.Amount.ViewAttributes)>
@Html.Raw(AgentBankRemittanceRate.Amount.ListViewValue)</span>
</span>
			 @* Amount (end) *@
		} @* View (end) *@
</td>
	} @* Amount.Visible (end) *@
	@if (AgentBankRemittanceRate.Balance.Visible) { // Balance.Visible (begin)
		<td data-name="Balance"@Html.Raw(AgentBankRemittanceRate.Balance.CellAttributes)>
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_ADD) { // Add (begin)
			 @* Balance (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_Balance" class="form-group AgentBankRemittanceRate_Balance">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_Balance" name="x@(AgentBankRemittanceRate_list.RowIndex)_Balance" id="x@(AgentBankRemittanceRate_list.RowIndex)_Balance" size="30" placeholder="@AgentBankRemittanceRate.Balance.PlaceHolder" value="@AgentBankRemittanceRate.Balance.EditValue" @Html.Raw(AgentBankRemittanceRate.Balance.EditAttributes)>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_Balance" name="o@(AgentBankRemittanceRate_list.RowIndex)_Balance" id="o@(AgentBankRemittanceRate_list.RowIndex)_Balance" value="@AgentBankRemittanceRate.Balance.OldValue">
			 @* Balance (end) *@
		} @* Add (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_EDIT) { // Edit (begin)
			 @* Balance (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_Balance" class="form-group AgentBankRemittanceRate_Balance">
<span @Html.Raw(AgentBankRemittanceRate.Balance.ViewAttributes)>
<p class="form-control-static">@Html.Raw(AgentBankRemittanceRate.Balance.EditValue)</p></span>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_Balance" name="x@(AgentBankRemittanceRate_list.RowIndex)_Balance" id="x@(AgentBankRemittanceRate_list.RowIndex)_Balance" value="@AgentBankRemittanceRate.Balance.CurrentValue">
			 @* Balance (end) *@
		} @* Edit (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_VIEW) { // View (begin)
			 @* Balance (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_Balance" class="AgentBankRemittanceRate_Balance">
<span @Html.Raw(AgentBankRemittanceRate.Balance.ViewAttributes)>
@Html.Raw(AgentBankRemittanceRate.Balance.ListViewValue)</span>
</span>
			 @* Balance (end) *@
		} @* View (end) *@
</td>
	} @* Balance.Visible (end) *@
	@if (AgentBankRemittanceRate.CreatedBy.Visible) { // CreatedBy.Visible (begin)
		<td data-name="CreatedBy"@Html.Raw(AgentBankRemittanceRate.CreatedBy.CellAttributes)>
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_ADD) { // Add (begin)
			 @* CreatedBy (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_CreatedBy" class="form-group AgentBankRemittanceRate_CreatedBy">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_CreatedBy" name="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" id="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" size="30" maxlength="20" placeholder="@AgentBankRemittanceRate.CreatedBy.PlaceHolder" value="@AgentBankRemittanceRate.CreatedBy.EditValue" @Html.Raw(AgentBankRemittanceRate.CreatedBy.EditAttributes)>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_CreatedBy" name="o@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" id="o@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" value="@AgentBankRemittanceRate.CreatedBy.OldValue">
			 @* CreatedBy (end) *@
		} @* Add (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_EDIT) { // Edit (begin)
			 @* CreatedBy (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_CreatedBy" class="form-group AgentBankRemittanceRate_CreatedBy">
<span @Html.Raw(AgentBankRemittanceRate.CreatedBy.ViewAttributes)>
<p class="form-control-static">@Html.Raw(AgentBankRemittanceRate.CreatedBy.EditValue)</p></span>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_CreatedBy" name="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" id="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" value="@AgentBankRemittanceRate.CreatedBy.CurrentValue">
			 @* CreatedBy (end) *@
		} @* Edit (end) *@
		@if (AgentBankRemittanceRate.RowType == EW_ROWTYPE_VIEW) { // View (begin)
			 @* CreatedBy (begin) *@
<span id="el@(AgentBankRemittanceRate_list.RowCnt)_AgentBankRemittanceRate_CreatedBy" class="AgentBankRemittanceRate_CreatedBy">
<span @Html.Raw(AgentBankRemittanceRate.CreatedBy.ViewAttributes)>
@Html.Raw(AgentBankRemittanceRate.CreatedBy.ListViewValue)</span>
</span>
			 @* CreatedBy (end) *@
		} @* View (end) *@
</td>
	} @* CreatedBy.Visible (end) *@
	@{

		// Render list options (body, right)
		AgentBankRemittanceRate_list.ListOptions.Render("body", "right", AgentBankRemittanceRate_list.RowCnt);
	}
	</tr>
		if (AgentBankRemittanceRate_list.RowType == EW_ROWTYPE_ADD || AgentBankRemittanceRate_list.RowType == EW_ROWTYPE_EDIT) {
			<script type="text/javascript">
			fAgentBankRemittanceRatelist.UpdateOpts(@AgentBankRemittanceRate_list.RowIndex);
			</script>
		}
	} @* End if *@
	} @* End if *@
} @* End While *@
} @* End Code *@
@if (AgentBankRemittanceRate_list.CurrentAction == "gridadd" || AgentBankRemittanceRate_list.CurrentAction == "gridedit") {
	AgentBankRemittanceRate_list.RowIndex = "$rowindex$";
	AgentBankRemittanceRate_list.LoadDefaultValues();

	// Set row properties
	AgentBankRemittanceRate_list.ResetAttrs();
	AgentBankRemittanceRate_list.RowAttrs.Add("data-rowindex", Convert.ToString(AgentBankRemittanceRate_list.RowIndex));
	AgentBankRemittanceRate_list.RowAttrs.Add("id", "r0_AgentBankRemittanceRate");
	AgentBankRemittanceRate_list.RowAttrs.Add("data-rowtype", Convert.ToString(EW_ROWTYPE_ADD));
	AgentBankRemittanceRate_list.RowAttrs.AppendClass("ewTemplate");
	AgentBankRemittanceRate_list.RowType = EW_ROWTYPE_ADD;

	// Render row
	AgentBankRemittanceRate_list.RenderRow();

	// Render list options
	AgentBankRemittanceRate_list.RenderListOptions();
	AgentBankRemittanceRate_list.StartRowCnt = 0;
	<tr @Html.Raw(AgentBankRemittanceRate_list.RowAttributes)>
@{

	// Render list options (body, left)
	AgentBankRemittanceRate_list.ListOptions.Render("body", "left", AgentBankRemittanceRate_list.RowIndex);
}
	@if (AgentBankRemittanceRate.id.Visible) { // id.Visible (begin)
		<td data-name="id">
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_id" name="o@(AgentBankRemittanceRate_list.RowIndex)_id" id="o@(AgentBankRemittanceRate_list.RowIndex)_id" value="@AgentBankRemittanceRate.id.OldValue">
</td>
	} @* id.Visible (end) *@
	@if (AgentBankRemittanceRate.ContractType.Visible) { // ContractType.Visible (begin)
		<td data-name="ContractType">
<span id="el$rowindex$_AgentBankRemittanceRate_ContractType" class="form-group AgentBankRemittanceRate_ContractType">
<div id="tp_x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" class="ewTemplate"><input type="radio" data-table="AgentBankRemittanceRate" data-field="x_ContractType" data-value-separator="@AgentBankRemittanceRate.ContractType.DisplayValueSeparatorAttribute" name="x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" id="x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" value="{value}"@Html.Raw(AgentBankRemittanceRate.ContractType.EditAttributes)></div>
<div id="dsl_x@(AgentBankRemittanceRate_list.RowIndex)_ContractType" data-repeatcolumn="5" class="ewItemList" style="display: none;"><div>
@AgentBankRemittanceRate.ContractType.RadioButtonListHtml(false, "x" + AgentBankRemittanceRate_list.RowIndex + "_ContractType")
</div></div>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_ContractType" name="o@(AgentBankRemittanceRate_list.RowIndex)_ContractType" id="o@(AgentBankRemittanceRate_list.RowIndex)_ContractType" value="@AgentBankRemittanceRate.ContractType.OldValue">
</td>
	} @* ContractType.Visible (end) *@
	@if (AgentBankRemittanceRate.CreatedDate.Visible) { // CreatedDate.Visible (begin)
		<td data-name="CreatedDate">
<span id="el$rowindex$_AgentBankRemittanceRate_CreatedDate" class="form-group AgentBankRemittanceRate_CreatedDate">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_CreatedDate" name="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" id="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" placeholder="@AgentBankRemittanceRate.CreatedDate.PlaceHolder" value="@AgentBankRemittanceRate.CreatedDate.EditValue" @Html.Raw(AgentBankRemittanceRate.CreatedDate.EditAttributes)>
@if (!AgentBankRemittanceRate.CreatedDate.ReadOnly && !AgentBankRemittanceRate.CreatedDate.Disabled && !AgentBankRemittanceRate.CreatedDate.EditAttrs.ContainsKey("readonly") && !AgentBankRemittanceRate.CreatedDate.EditAttrs.ContainsKey("disabled")) {
<script type="text/javascript">
ew_CreateCalendar("fAgentBankRemittanceRatelist", "x@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate", 0);
</script>
}
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_CreatedDate" name="o@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" id="o@(AgentBankRemittanceRate_list.RowIndex)_CreatedDate" value="@AgentBankRemittanceRate.CreatedDate.OldValue">
</td>
	} @* CreatedDate.Visible (end) *@
	@if (AgentBankRemittanceRate.CurrencyCode.Visible) { // CurrencyCode.Visible (begin)
		<td data-name="CurrencyCode">
<span id="el$rowindex$_AgentBankRemittanceRate_CurrencyCode" class="form-group AgentBankRemittanceRate_CurrencyCode">
<span>@{ AgentBankRemittanceRate.CurrencyCode.EditAttrs.Prepend("onchange", "ew_UpdateOpt.call(this);"); }</span>
<select data-table="AgentBankRemittanceRate" data-field="x_CurrencyCode" data-value-separator="@AgentBankRemittanceRate.CurrencyCode.DisplayValueSeparatorAttribute"  id="x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" name="x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" @Html.Raw(AgentBankRemittanceRate.CurrencyCode.EditAttributes)>
@AgentBankRemittanceRate.CurrencyCode.SelectOptionListHtml("x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode")
</select>
<input type="hidden" name="s_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" id="s_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" value="@AgentBankRemittanceRate.CurrencyCode.LookupFilterQuery()">
<input type="hidden" name="ln_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" id="ln_x@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" value="x@(AgentBankRemittanceRate_list.RowIndex)_AgentId">
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_CurrencyCode" name="o@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" id="o@(AgentBankRemittanceRate_list.RowIndex)_CurrencyCode" value="@AgentBankRemittanceRate.CurrencyCode.OldValue">
</td>
	} @* CurrencyCode.Visible (end) *@
	@if (AgentBankRemittanceRate.AgentId.Visible) { // AgentId.Visible (begin)
		<td data-name="AgentId">
<span id="el$rowindex$_AgentBankRemittanceRate_AgentId" class="form-group AgentBankRemittanceRate_AgentId">
<span>@{ AgentBankRemittanceRate.AgentId.EditAttrs.Prepend("onclick", "ew_AutoFill(this);"); }</span>
<div class="ewDropdownList has-feedback">
	<span onclick="" class="form-control dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
		@Html.Raw(AgentBankRemittanceRate.AgentId.ViewValue)
	</span>
	<span class="glyphicon glyphicon-remove form-control-feedback ewDropdownListClear"></span>
	<span class="form-control-feedback"><span class="caret"></span></span>
	<div id="dsl_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" data-repeatcolumn="1" class="dropdown-menu">
		<div class="ewItems" style="position: relative; overflow-x: hidden;">
@AgentBankRemittanceRate.AgentId.RadioButtonListHtml(true, "x" + AgentBankRemittanceRate_list.RowIndex + "_AgentId")
		</div>
	</div>
	<div id="tp_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" class="ewTemplate"><input type="radio" data-table="AgentBankRemittanceRate" data-field="x_AgentId" data-value-separator="@AgentBankRemittanceRate.AgentId.DisplayValueSeparatorAttribute" name="x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="{value}"@Html.Raw(AgentBankRemittanceRate.AgentId.EditAttributes)></div>
</div>
<input type="hidden" name="s_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="s_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="@AgentBankRemittanceRate.AgentId.LookupFilterQuery()">
<input type="hidden" name="ln_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="ln_x@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="x@(AgentBankRemittanceRate_list.RowIndex)_Balance">
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_AgentId" name="o@(AgentBankRemittanceRate_list.RowIndex)_AgentId" id="o@(AgentBankRemittanceRate_list.RowIndex)_AgentId" value="@AgentBankRemittanceRate.AgentId.OldValue">
</td>
	} @* AgentId.Visible (end) *@
	@if (AgentBankRemittanceRate.Rate.Visible) { // Rate.Visible (begin)
		<td data-name="Rate">
<span id="el$rowindex$_AgentBankRemittanceRate_Rate" class="form-group AgentBankRemittanceRate_Rate">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_Rate" name="x@(AgentBankRemittanceRate_list.RowIndex)_Rate" id="x@(AgentBankRemittanceRate_list.RowIndex)_Rate" size="30" placeholder="@AgentBankRemittanceRate.Rate.PlaceHolder" value="@AgentBankRemittanceRate.Rate.EditValue" @Html.Raw(AgentBankRemittanceRate.Rate.EditAttributes)>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_Rate" name="o@(AgentBankRemittanceRate_list.RowIndex)_Rate" id="o@(AgentBankRemittanceRate_list.RowIndex)_Rate" value="@AgentBankRemittanceRate.Rate.OldValue">
</td>
	} @* Rate.Visible (end) *@
	@if (AgentBankRemittanceRate.Amount.Visible) { // Amount.Visible (begin)
		<td data-name="Amount">
<span id="el$rowindex$_AgentBankRemittanceRate_Amount" class="form-group AgentBankRemittanceRate_Amount">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_Amount" name="x@(AgentBankRemittanceRate_list.RowIndex)_Amount" id="x@(AgentBankRemittanceRate_list.RowIndex)_Amount" size="30" placeholder="@AgentBankRemittanceRate.Amount.PlaceHolder" value="@AgentBankRemittanceRate.Amount.EditValue" @Html.Raw(AgentBankRemittanceRate.Amount.EditAttributes)>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_Amount" name="o@(AgentBankRemittanceRate_list.RowIndex)_Amount" id="o@(AgentBankRemittanceRate_list.RowIndex)_Amount" value="@AgentBankRemittanceRate.Amount.OldValue">
</td>
	} @* Amount.Visible (end) *@
	@if (AgentBankRemittanceRate.Balance.Visible) { // Balance.Visible (begin)
		<td data-name="Balance">
<span id="el$rowindex$_AgentBankRemittanceRate_Balance" class="form-group AgentBankRemittanceRate_Balance">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_Balance" name="x@(AgentBankRemittanceRate_list.RowIndex)_Balance" id="x@(AgentBankRemittanceRate_list.RowIndex)_Balance" size="30" placeholder="@AgentBankRemittanceRate.Balance.PlaceHolder" value="@AgentBankRemittanceRate.Balance.EditValue" @Html.Raw(AgentBankRemittanceRate.Balance.EditAttributes)>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_Balance" name="o@(AgentBankRemittanceRate_list.RowIndex)_Balance" id="o@(AgentBankRemittanceRate_list.RowIndex)_Balance" value="@AgentBankRemittanceRate.Balance.OldValue">
</td>
	} @* Balance.Visible (end) *@
	@if (AgentBankRemittanceRate.CreatedBy.Visible) { // CreatedBy.Visible (begin)
		<td data-name="CreatedBy">
<span id="el$rowindex$_AgentBankRemittanceRate_CreatedBy" class="form-group AgentBankRemittanceRate_CreatedBy">
<input type="text" data-table="AgentBankRemittanceRate" data-field="x_CreatedBy" name="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" id="x@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" size="30" maxlength="20" placeholder="@AgentBankRemittanceRate.CreatedBy.PlaceHolder" value="@AgentBankRemittanceRate.CreatedBy.EditValue" @Html.Raw(AgentBankRemittanceRate.CreatedBy.EditAttributes)>
</span>
<input type="hidden" data-table="AgentBankRemittanceRate" data-field="x_CreatedBy" name="o@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" id="o@(AgentBankRemittanceRate_list.RowIndex)_CreatedBy" value="@AgentBankRemittanceRate.CreatedBy.OldValue">
</td>
	} @* CreatedBy.Visible (end) *@
@{

	// Render list options (body, right)
	AgentBankRemittanceRate_list.ListOptions.Render("body", "right", AgentBankRemittanceRate_list.RowCnt);
}
<script type="text/javascript">
fAgentBankRemittanceRatelist.UpdateOpts(@AgentBankRemittanceRate_list.RowIndex);
</script>
	</tr>
}
</tbody>
</table>
} @* End If TotalRecs > 0 *@
@if (AgentBankRemittanceRate_list.CurrentAction == "gridadd") {
<input type="hidden" name="a_list" id="a_list" value="gridinsert">
<input type="hidden" name="@AgentBankRemittanceRate_list.FormKeyCountName" id="@AgentBankRemittanceRate_list.FormKeyCountName" value="@AgentBankRemittanceRate_list.KeyCount">
@Html.Raw(AgentBankRemittanceRate_list.MultiSelectKey)
}
@if (AgentBankRemittanceRate_list.CurrentAction == "gridedit") {
<input type="hidden" name="a_list" id="a_list" value="gridupdate">
<input type="hidden" name="@AgentBankRemittanceRate_list.FormKeyCountName" id="@AgentBankRemittanceRate_list.FormKeyCountName" value="@AgentBankRemittanceRate_list.KeyCount">
@Html.Raw(AgentBankRemittanceRate_list.MultiSelectKey)
}
@if (ew_Empty(AgentBankRemittanceRate_list.CurrentAction)) {
<input type="hidden" name="a_list" id="a_list" value="">
}
</div>
</form>
@{ AgentBankRemittanceRate_list.CloseRecordset(); }
		@if (ew_Empty(AgentBankRemittanceRate.Export)) {
		<div class="panel-footer ewGridLowerPanel">
		@if (AgentBankRemittanceRate_list.CurrentAction != "gridadd" && AgentBankRemittanceRate_list.CurrentAction != "gridedit") {
			<form name="ewPagerForm" class="ewForm form-horizontal ewPagerForm" action="@ew_AppPath(ew_CurrentPage())">
@{ AgentBankRemittanceRate_list.Pager = AgentBankRemittanceRate_list.Pager ?? new cNumericPager(AgentBankRemittanceRate_list.StartRec, AgentBankRemittanceRate_list.DisplayRecs, AgentBankRemittanceRate_list.TotalRecs, AgentBankRemittanceRate_list.RecRange, AgentBankRemittanceRate_list.AutoHidePager); }
@if (AgentBankRemittanceRate_list.Pager.RecordCount > 0 && AgentBankRemittanceRate_list.Pager.Visible) {
<div class="ewPager">
<div class="ewNumericPage"><ul class="pagination">
	@if (AgentBankRemittanceRate_list.Pager.FirstButton.Enabled) {
	<li><a href="@ew_AppPath(AgentBankRemittanceRate_list.PageUrl)start=@AgentBankRemittanceRate_list.Pager.FirstButton.Start">@Html.Raw(Language.Phrase("PagerFirst"))</a></li>
	}
	@if (AgentBankRemittanceRate_list.Pager.PrevButton.Enabled) {
	<li><a href="@ew_AppPath(AgentBankRemittanceRate_list.PageUrl)start=@AgentBankRemittanceRate_list.Pager.PrevButton.Start">@Html.Raw(Language.Phrase("PagerPrevious"))</a></li>
	}
	@foreach (var PagerItem in AgentBankRemittanceRate_list.Pager.Items) {
		<li class="@((!PagerItem.Enabled) ? "active" : null)"><a href="@((PagerItem.Enabled) ? (ew_AppPath(AgentBankRemittanceRate_list.PageUrl) + "start=" + Convert.ToString(PagerItem.Start)) : "#")">@PagerItem.Text</a></li>
	}
	@if (AgentBankRemittanceRate_list.Pager.NextButton.Enabled) {
	<li><a href="@ew_AppPath(AgentBankRemittanceRate_list.PageUrl)start=@AgentBankRemittanceRate_list.Pager.NextButton.Start">@Html.Raw(Language.Phrase("PagerNext"))</a></li>
	}
	@if (AgentBankRemittanceRate_list.Pager.LastButton.Enabled) {
	<li><a href="@ew_AppPath(AgentBankRemittanceRate_list.PageUrl)start=@AgentBankRemittanceRate_list.Pager.LastButton.Start">@Html.Raw(Language.Phrase("PagerLast"))</a></li>
	}
</ul></div>
</div>
	<div class="ewPager ewRec">
		<span>@Html.Raw(Language.Phrase("Record"))&nbsp;@(AgentBankRemittanceRate_list.Pager.FromIndex)&nbsp;@Html.Raw(Language.Phrase("To"))&nbsp;@(AgentBankRemittanceRate_list.Pager.ToIndex)&nbsp;@Html.Raw(Language.Phrase("Of"))&nbsp;@(AgentBankRemittanceRate_list.Pager.RecordCount)</span>
	</div>
}
@if (AgentBankRemittanceRate_list.Pager.RecordCount > 0 && (!AgentBankRemittanceRate_list.AutoHidePageSizeSelector || AgentBankRemittanceRate_list.Pager.Visible)) {
<div class="ewPager">
<select name="@EW_TABLE_REC_PER_PAGE" class="form-control input-sm ewTooltip" title="@Html.Raw(Language.Phrase("RecordsPerPage"))" onchange="this.form.submit();">
<option value="10" selected="@(AgentBankRemittanceRate_list.DisplayRecs == 10)">10</option>
<option value="20" selected="@(AgentBankRemittanceRate_list.DisplayRecs == 20)">20</option>
<option value="50" selected="@(AgentBankRemittanceRate_list.DisplayRecs == 50)">50</option>
<option value="ALL" selected="@(AgentBankRemittanceRate_list.RecordsPerPage == -1)">@Html.Raw(Language.Phrase("AllRecords"))</option>
</select>
</div>
}
			</form>
		}
		<div class="ewListOtherOptions">
		@{ AgentBankRemittanceRate_list.ForEachOtherOption(kvp => kvp.Value.Render("body", "bottom")); }
		</div>
		<div class="clearfix"></div>
		</div>
		}
</div>
}
@if (AgentBankRemittanceRate_list.TotalRecs <= 0 && AgentBankRemittanceRate_list.CurrentAction == "") { // Show other options
<div class="ewListOtherOptions">
@{ AgentBankRemittanceRate_list.ForEachOtherOption(kvp => { kvp.Value.ButtonClass = ""; kvp.Value.Render("body", ""); }); }
</div>
<div class="clearfix"></div>
}
@if (ew_Empty(AgentBankRemittanceRate.Export)) {
<script type="text/javascript">
fAgentBankRemittanceRatelistsrch.FilterList = @Html.Raw(AgentBankRemittanceRate_list.GetFilterList());
fAgentBankRemittanceRatelistsrch.Init();
fAgentBankRemittanceRatelist.Init();
</script>
}
@AgentBankRemittanceRate_list.ShowPageFooter()
@DebugMsg()
@ElapsedTime(StartTime)
@if (ew_Empty(AgentBankRemittanceRate.Export)) {
<script type="text/javascript">

// Write your table-specific startup script here
// document.write("page loaded");

</script>
}
@{ AgentBankRemittanceRate_list.Page_Terminate(); }
